{
  "configById": {
    "Tab!2stsle7": {
      "activeTabIdx": 0,
      "tabs": [
        {
          "title": "Diagnostics",
          "layout": {
            "direction": "column",
            "second": {
              "first": "DiagnosticStatusPanel!2eafyct",
              "second": "Indicator!1ogphbu",
              "direction": "row"
            },
            "first": "DiagnosticSummary!1eu78ri"
          }
        },
        {
          "title": "Topic",
          "layout": "RawMessages!2j3knpg"
        },
        {
          "title": "Parameters",
          "layout": "Parameters!456osk1"
        }
      ]
    },
    "Tab!3c5ayq6": {
      "activeTabIdx": 0,
      "tabs": [
        {
          "title": "Log",
          "layout": "RosOut!3hawevs"
        }
      ]
    },
    "DiagnosticSummary!1eu78ri": {
      "minLevel": 1,
      "pinnedIds": [
        "||zed_node: ZED Diagnostic|"
      ],
      "hardwareIdFilter": "",
      "topicToRender": "/sensor/seapath/diagnostic_array",
      "sortByLevel": true,
      "secondsUntilStale": 0
    },
    "DiagnosticStatusPanel!2eafyct": {
      "topicToRender": "/sensor/seapath/diagnostic_array",
      "selectedHardwareId": "",
      "collapsedSections": [],
      "selectedName": "Diagnostic_connection_to_socket_status"
    },
    "Indicator!1ogphbu": {
      "path": "",
      "style": "bulb",
      "fallbackColor": "#a0a0a0",
      "fallbackLabel": "False",
      "rules": [
        {
          "operator": "=",
          "rawValue": "1",
          "color": "#e20000",
          "label": "Rød"
        },
        {
          "operator": "=",
          "rawValue": "2",
          "color": "#edec00",
          "label": "Gul"
        },
        {
          "operator": "=",
          "rawValue": "3",
          "color": "#00ff33",
          "label": "Grønn"
        },
        {
          "operator": "=",
          "rawValue": "4",
          "color": "#1f00e2",
          "label": "Blå"
        }
      ]
    },
    "RawMessages!2j3knpg": {
      "diffEnabled": false,
      "diffMethod": "previous message",
      "diffTopicPath": "",
      "showFullMessageForDiff": false,
      "topicPath": "/sensor/seapath/diagnostic_msg"
    },
    "Parameters!456osk1": {
      "title": "Parameters"
    },
    "RosOut!3hawevs": {
      "searchTerms": [],
      "minLogLevel": 2
    },
    "TopicGraph!3gijpuo": {},
    "Plot!1vtd7hh": {
      "paths": [
        {
          "timestampMethod": "receiveTime",
          "value": "",
          "enabled": true,
          "label": "Elhouse temp"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240
    },
    "Plot!3cyssa": {
      "paths": [
        {
          "value": "",
          "enabled": true,
          "timestampMethod": "headerStamp",
          "label": "Left Battery Voltage",
          "showLine": true
        },
        {
          "timestampMethod": "headerStamp",
          "value": "",
          "enabled": true,
          "label": "Right Battery Voltage"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Batteries"
    },
    "Gauge!2yoo6wn": {
      "path": "",
      "minValue": 0,
      "maxValue": 100,
      "colorMap": "rainbow",
      "colorMode": "gradient",
      "gradient": [
        "#9f110eff",
        "#6bc1daff"
      ],
      "reverse": false,
      "foxglovePanelTitle": "Battery precentage"
    },
    "Image!3ooqsae": {
      "cameraState": {
        "distance": 20,
        "perspective": true,
        "phi": 60,
        "target": [
          0,
          0,
          0
        ],
        "targetOffset": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "thetaOffset": 45,
        "fovy": 45,
        "near": 0.5,
        "far": 5000
      },
      "followMode": "follow-pose",
      "scene": {},
      "transforms": {},
      "topics": {
        "/zed2i/zed_node/point_cloud/cloud_registered": {
          "visible": false
        },
        "/zed2/zed_node/point_cloud/cloud_registered": {
          "visible": false
        }
      },
      "layers": {},
      "publish": {
        "type": "point",
        "poseTopic": "/move_base_simple/goal",
        "pointTopic": "/clicked_point",
        "poseEstimateTopic": "/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {
        "imageTopic": "/zed2/zed_node/rgb/image_rect_color",
        "calibrationTopic": "/zed2/zed_node/rgb/camera_info",
        "synchronize": false
      },
      "foxglovePanelTitle": ""
    },
    "3D!233at6n": {
      "cameraState": {
        "perspective": true,
        "distance": 7.547072050672502,
        "phi": 0.567880635810651,
        "thetaOffset": 50.45069894664304,
        "targetOffset": [
          -2.137312103411725,
          -0.009250049596367611,
          2.340840166957996e-16
        ],
        "target": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "fovy": 45,
        "near": 0.5,
        "far": 5000
      },
      "followMode": "follow-pose",
      "scene": {
        "ignoreColladaUpAxis": false,
        "meshUpAxis": "z_up"
      },
      "transforms": {
        "frame:zed2i_imu_link": {
          "visible": false
        },
        "frame:zed2i_left_camera_frame": {
          "visible": false
        },
        "frame:zed2i_base_link": {
          "visible": false
        },
        "frame:base_link": {
          "visible": true
        },
        "frame:zed2i_camera_center": {
          "visible": false
        },
        "frame:zed2i_left_camera_optical_frame": {
          "visible": false
        },
        "frame:zed2i_right_camera_frame": {
          "visible": false
        },
        "frame:zed2i_right_camera_optical_frame": {
          "visible": false
        },
        "frame:odom": {
          "visible": false
        },
        "frame:map": {
          "visible": false
        }
      },
      "topics": {
        "/robot_description": {
          "visible": true
        },
        "/zed2i/zed_node/point_cloud/cloud_registered": {
          "visible": true,
          "colorField": "x",
          "colorMode": "rgb",
          "colorMap": "turbo"
        },
        "/zed2i/zed_node/pose_with_covariance": {
          "visible": false
        },
        "/ouster/points": {
          "visible": true,
          "colorField": "intensity",
          "colorMode": "colormap",
          "colorMap": "turbo",
          "decayTime": 0.241
        }
      },
      "layers": {
        "8f09ec46-442e-4370-bd89-d20c2893f58e": {
          "visible": true,
          "frameLocked": true,
          "label": "Grid",
          "instanceId": "8f09ec46-442e-4370-bd89-d20c2893f58e",
          "layerId": "foxglove.Grid",
          "size": 10,
          "divisions": 10,
          "lineWidth": 1,
          "color": "#248eff",
          "position": [
            0,
            0,
            0
          ],
          "rotation": [
            0,
            0,
            0
          ],
          "order": 1
        }
      },
      "publish": {
        "type": "point",
        "poseTopic": "/move_base_simple/goal",
        "pointTopic": "/clicked_point",
        "poseEstimateTopic": "/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {},
      "followTf": "base_link_SEU"
    },
    "map!1pik150": {
      "center": {
        "lat": 63.433556992318316,
        "lon": 10.394462125495341
      },
      "customTileUrl": "",
      "disabledTopics": [],
      "followTopic": "",
      "layer": "map",
      "topicColors": {},
      "zoomLevel": 15,
      "maxNativeZoom": 18
    },
    "3D!1j5zwes": {
      "cameraState": {
        "perspective": true,
        "distance": 6.81123252562286,
        "phi": 56.555540115955644,
        "thetaOffset": 131.33597535017205,
        "targetOffset": [
          -1.2796935730157886,
          -0.7810389508330593,
          1.394360427978297e-15
        ],
        "target": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "fovy": 45,
        "near": 0.5,
        "far": 5000
      },
      "followMode": "follow-pose",
      "scene": {
        "syncCamera": false,
        "enableStats": false,
        "backgroundColor": "#000000",
        "meshUpAxis": "z_up",
        "labelScaleFactor": 0.38
      },
      "transforms": {
        "frame:base_link": {
          "visible": false
        },
        "frame:base_link_ENU": {
          "visible": false
        },
        "frame:os_lidar": {
          "visible": true
        },
        "frame:zed2i_camera_center": {
          "visible": false
        },
        "frame:map": {
          "visible": false
        },
        "frame:odom": {
          "visible": false
        },
        "frame:zed2i_base_link": {
          "visible": false
        },
        "frame:zed2i_left_camera_frame": {
          "visible": false
        },
        "frame:zed2i_left_camera_optical_frame": {
          "visible": false
        },
        "frame:zed2i_imu_link": {
          "visible": false
        },
        "frame:zed2i_right_camera_optical_frame": {
          "visible": false
        },
        "frame:zed2i_right_camera_frame": {
          "visible": false
        }
      },
      "topics": {
        "/ouster/points": {
          "visible": true,
          "stixelsEnabled": false,
          "colorField": "reflectivity",
          "colorMode": "colormap",
          "colorMap": "rainbow",
          "explicitAlpha": 1,
          "pointShape": "circle",
          "decayTime": 1.311
        },
        "/move_base_simple/goal": {
          "visible": false
        },
        "/ouster/nearir_image": {
          "visible": false
        },
        "/ouster/range_image": {
          "visible": false
        },
        "/ouster/reflec_image": {
          "visible": false
        },
        "/ouster/scan": {
          "visible": false,
          "colorField": "intensity",
          "colorMode": "colormap",
          "colorMap": "turbo"
        },
        "/ouster/signal_image": {
          "visible": false
        },
        "/initialpose": {
          "visible": false
        },
        "/robot_description": {
          "visible": true,
          "fallbackColor": "#e21d1d",
          "displayMode": "auto"
        },
        "/zed2i/zed_node/point_cloud/cloud_registered": {
          "visible": true,
          "colorField": "rgb",
          "colorMode": "rgb",
          "colorMap": "turbo",
          "pointSize": 3
        },
        "/zed2/zed_node/point_cloud/cloud_registered": {
          "visible": false
        }
      },
      "layers": {
        "7142419f-2b10-446b-a26d-06fc0ddb9cf4": {
          "visible": true,
          "frameLocked": true,
          "label": "Grid",
          "instanceId": "7142419f-2b10-446b-a26d-06fc0ddb9cf4",
          "layerId": "foxglove.Grid",
          "size": 10,
          "divisions": 10,
          "lineWidth": 1,
          "color": "#248eff",
          "position": [
            0,
            0,
            0
          ],
          "rotation": [
            0,
            0,
            0
          ],
          "order": 1
        }
      },
      "publish": {
        "type": "point",
        "poseTopic": "/move_base_simple/goal",
        "pointTopic": "/clicked_point",
        "poseEstimateTopic": "/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {},
      "followTf": "os_lidar"
    },
    "Tab!3nhm9up": {
      "activeTabIdx": 0,
      "tabs": [
        {
          "title": "ROS Status",
          "layout": {
            "first": "Tab!2stsle7",
            "second": "Tab!3c5ayq6",
            "direction": "row"
          }
        },
        {
          "title": "Topic Graph",
          "layout": "TopicGraph!3gijpuo"
        },
        {
          "title": "Electrical",
          "layout": {
            "first": {
              "first": "Plot!1vtd7hh",
              "second": "Plot!3cyssa",
              "direction": "column"
            },
            "second": "Gauge!2yoo6wn",
            "direction": "row",
            "splitPercentage": 50.36794766966476
          }
        },
        {
          "title": "External Sensors",
          "layout": {
            "first": {
              "first": "Image!3ooqsae",
              "second": "3D!233at6n",
              "direction": "column",
              "splitPercentage": 50.397614314115316
            },
            "second": "map!1pik150",
            "direction": "row",
            "splitPercentage": 48.39142091152815
          }
        },
        {
          "title": "3D",
          "layout": "3D!1j5zwes"
        }
      ]
    }
  },
  "globalVariables": {},
  "userNodes": {
    "55c0ffdf-eed9-4e04-ab0b-ea9b780d91a8": {
      "sourceCode": "// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use `Message` to access types from the schemas defined in your data source:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Import from the @foxglove/schemas package to use foxglove schema types:\n// import { Pose, LocationFix } from \"@foxglove/schemas\";\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type `Output` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the `Input<...>` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};",
      "name": "55c0ffdf"
    }
  },
  "playbackConfig": {
    "speed": 1
  },
  "layout": "Tab!3nhm9up"
}